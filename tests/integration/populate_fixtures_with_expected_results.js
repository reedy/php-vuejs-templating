const { createSSRApp } = require( 'vue' );
const cheerio = require( 'cheerio' );
const { renderToString } = require( 'vue/server-renderer' );
const fs = require( 'fs' );

const fixtureDir = __dirname + '/fixture';
const generatedComment = '<!-- generated by `npm run-script populate-fixtures` -->';

const defaultMethods = {
	message: String,
	directionality: function () {
		return 'auto';
	}
};

readFixtureDir().then( function ( files ) {
	files.forEach( function ( fileName ) {
		var filePath = fixtureDir + '/' + fileName;
		readFile( filePath )
			.then( extractDataFromFixture )
			.then( renderTemplate )
			.then( removeServerRenderedDataAttribute )
			.then( saveResultToFile.bind(undefined, filePath) )
			.then( function ( ) {
				console.log( 'saved ' + fileName );
			} )
	} );
} );

function extractDataFromFixture( html ) {
	const $ = cheerio.load( html );

	const template = cheerio.load( $( '#template' ).html() ).html( { decodeEntities: false } ).trim();
	const data = JSON.parse( $( '#data' ).html() );

	return { template: template, data: data };
}

function renderTemplate( fixtureData ) {
	const app = createSSRApp( {
		template: fixtureData.template,
		data: () => fixtureData.data,
		methods: defaultMethods
	} );

	return renderToString( app );
}

function removeServerRenderedDataAttribute( html ) {
	const $ = cheerio.load( html );

	$.root().children().each(function() {
		 $(this).removeAttr('data-server-rendered');
	});

	return $.html({ decodeEntities: false });
}

function readFile( filePath ) {
	return new Promise( function ( resolve, reject ) {
		fs.readFile( filePath, 'utf8', function ( err, data ) {
			if ( err ) {
				reject( err )
			} else {
				resolve( data );
			}
		} );
	} );
}

function saveFile( filePath, contents ) {
	return new Promise( function ( resolve, reject ) {
		fs.writeFile( filePath, contents, 'utf8', function ( err ) {
			if ( err ) {
				reject( err )
			} else {
				resolve();
			}
		} );
	} );
}

function readFixtureDir() {
	return new Promise( function ( resolve, reject ) {
		fs.readdir( fixtureDir, function ( err, items ) {
			if ( err ) {
				reject( err )
			} else {
				resolve( items );
			}
		} );
	} );
}

function saveResultToFile(filePath, renderResult) {
	readFile( filePath ).then( function ( html ) {
		const $ = cheerio.load( html );
		$( '#result' ).remove();

		const $resultElement = $( '<div id="result"></div>' ).html( "\n\t" + generatedComment + "\n\t" + renderResult + "\n" );
		$.root().children().last().after( $resultElement ).after("\n");

		return saveFile( filePath, $.html({ decodeEntities: false }).trim() + "\n" );
	} );
}
